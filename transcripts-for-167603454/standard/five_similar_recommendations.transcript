Welcome to Stanford CS124's Chatbot Autograding.

            Bot: Pycaprio (Starter Mode)
            
            Bot Spec:
                - Ability to identify movies in quotation marks with correct capitalization like "Her (2013)" or "Her"
                - Ability to extract simple sentiment and give recommendations after >= 5 user valid movie inputs
                - Ability to keep giving further recommendation and reset the system after having recommended 10 movies
                to avoid imprecise recommendation
                - Ability to speak in different ways (e.g. Tell me about a movie that you have seen. &  Can you tell me
                about a different movie you have watched?) using randomization
                - Ability to disambiguate movies of the same titles (no funnel widening) with different years while
                still keeping track of the sentiment.
                - Ability to perform disambiguation in multiple turns
                (
                    Pycaprio> Okay, you liked "Shrek (2001)". Can you tell me about a different movie you have watched?
                    > I saw "Titanic"
                    Pycaprio> I found more than one movie called "Titanic". Which of these were you referring to when
                    you mentioned it: "Titanic (1953)" or "Titanic (1997)"?
                    > 1953
                    Pycaprio> I don't know how you feel about "Titanic (1953)". Could you explain your opinion about it
                    more clearly?
                    > i like it!
                    Pycaprio> Okay, you liked "Titanic (1953)". Tell me about another movie you have seen.
                    > ...
                )
                - Ability to perform sentiment clarification in multiple turns
                (
                    Pycaprio> I am unfamiliar with "titanic". Can you tell me about other movie you have watched?
                    > i saw "Titanic"
                    Pycaprio> I found more than one movie called "Titanic". Could you please specify which one of these
                    you were referring to: "Titanic (1953)" or "Titanic (1997)"?
                    > 199
                    Pycaprio> I don't know how you feel about "Titanic (1997)". Could you elaborate on your opinion of it?
                    > i saw it
                    Pycaprio> I don't know how you feel about "Titanic (1997)". Could you explain your opinion about it more clearly?
                    > i saw it
                    Pycaprio> I don't know how you feel about "Titanic (1997)". Can you please clarify how you feel about it?
                    > ...
                )
                - Ability to communicate one sentiment given multiple-movie input
                (
                    Pycaprio> Hi! Iâ€™m PyCaprio! Iâ€™m going to recommend a movie to you. Letâ€™s first talk about your taste
                    in movies. Tell me about a movie that you have seen.
                    > i like "Titanic (1997)" and "The Twilight Samurai (2002)"
                    Pycaprio> Okay, you liked "Titanic (1997)" and "The Twilight Samurai (2002)". Could you describe
                    another movie you have viewed?
                    > ...
                )
                
            Bot Limitation
                - Lack of ability to identify movies by its foreign names
                - Lack of ability to handle arbitrary inputs of certain forms and emotion and loop back to the previous question
                it asks the user
                - Lack of ability to widen the funnel
                - Lack of ability to find movie closest to title and ask the user to confirm while still keeping track of the
                sentiment user expresses (as in disambiguation)
                - Lack of ability to communicate multiple sentiments given multiple-movie input (Our bot can commnicate
                if there is one sentiment for all movies though.)(We implement extract_sentiment_for_movies but did not
                use it in the core structure.)
                
            Developed by:
                Thanawan (Ly-Ly) Atchariyachanvanit, Riley Carlson, Pawan Wirawarn, & Andrew Wu

            DISCLAIMER!! You are talking with a bot, not a human.
            
[96mPycaprio> [0mHi! Iâ€™m PyCaprio! Iâ€™m going to recommend a movie to you. Letâ€™s first talk about your taste in movies. Tell me about a movie that you have seen.
> I liked "Titanic (1997)"

[96mPycaprio> [0mAlright, you enjoyed watching "Titanic (1997)". Can you tell me about another movie you have watched?
> I hated "Zootopia"

[96mPycaprio> [0mOkay, you didn't enjoy "Zootopia (2016)". Could you describe another movie you have viewed?
> I liked "Tangled Ever After"

[96mPycaprio> [0mAlright, you enjoyed watching "Tangled Ever After (2012)". Can you tell me about a different movie you have watched?
> I hated "Sleeping Beauty"

[96mPycaprio> [0mOkay, you were not a fan of "Sleeping Beauty (1959)". Could you describe another movie you have viewed?
> I liked "Mulan"

Traceback (most recent call last):
  File "/usr/local/anaconda3/envs/cs124/lib/python3.8/cmd.py", line 214, in onecmd
    func = getattr(self, 'do_' + cmd)
AttributeError: 'REPL' object has no attribute 'do_I'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "repl.py", line 189, in <module>
    repl.cmdloop()
  File "/usr/local/anaconda3/envs/cs124/lib/python3.8/site-packages/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "repl.py", line 77, in cmdloop
    return super().cmdloop(intro)
  File "/usr/local/anaconda3/envs/cs124/lib/python3.8/cmd.py", line 138, in cmdloop
    stop = self.onecmd(line)
  File "repl.py", line 90, in onecmd
    return super().onecmd(s)
  File "/usr/local/anaconda3/envs/cs124/lib/python3.8/cmd.py", line 216, in onecmd
    return self.default(line)
  File "repl.py", line 104, in default
    response = self.chatbot.process(line)
  File "/Users/ameliahardy/Documents/classes/cs124/root/assignments/pa7-chatbot/manual_grading/all_transcript_results/grading-for-167603454/chatbot.py", line 154, in process
    response = self.get_response_to_valid_input(input_movie_titles, input_movie_indices, input_sentiment)
  File "/Users/ameliahardy/Documents/classes/cs124/root/assignments/pa7-chatbot/manual_grading/all_transcript_results/grading-for-167603454/chatbot.py", line 806, in get_response_to_valid_input
    self.recommended_movies = self.recommend(self.user_ratings, self.ratings)
  File "/Users/ameliahardy/Documents/classes/cs124/root/assignments/pa7-chatbot/manual_grading/all_transcript_results/grading-for-167603454/chatbot.py", line 419, in recommend
    predicted_rating = self.predict_rating(ratings_matrix, user_ratings, i)
  File "/Users/ameliahardy/Documents/classes/cs124/root/assignments/pa7-chatbot/manual_grading/all_transcript_results/grading-for-167603454/chatbot.py", line 625, in predict_rating
    if movie_idx != movie_to_predict_idx and user_ratings[movie_idx] != 0:
  File "/usr/local/anaconda3/envs/cs124/lib/python3.8/site-packages/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/usr/local/anaconda3/envs/cs124/lib/python3.8/site-packages/timeout_decorator/timeout_decorator.py", line 45, in _raise_exception
    raise exception()
timeout_decorator.timeout_decorator.TimeoutError: 'Timed Out'
